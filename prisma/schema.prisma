generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  id    String     @id @default(uuid())
  email String  @unique
  name  String
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  slug  String @unique
  description String?
  color String? // タグの表示色
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // リレーション
  posts PostTag[]
}

model Post {
  id String @id @default(cuid())
  title String
  content String
  topImage String?
  published Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // リレーション
  tags PostTag[]
}

// 中間テーブル（多対多リレーション）
model PostTag {
  id String @id @default(cuid())
  postId String
  tagId  String
  // POSTテーブルのidと本テーブルのpostIdを紐づける。投稿が削除されると、関連するPostTagレコードも自動削除
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  // Tagテーブルのidと本テーブルのtagIdを紐づける。タグが削除されると、関連するPostTagレコードも自動削除
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  @@unique([postId, tagId]) // 同じ投稿に同じタグを複数回登録できないようにする
}